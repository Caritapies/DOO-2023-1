package App;

import Domain.Board;
import Domain.Player;

import java.util.Scanner;

import static java.lang.Character.isLetter;

public class AppTicTacToe {

    public boolean play(Player player, Scanner in, Board board){
        byte row, column;

        System.out.println("Turno de jugador 1");
        System.out.println("Ingresa la fila(1-3)");
        row = in.nextByte();
        if (row < 1 || row > 3){
            Board.reiniciarJuego();
            Board.setRound(Board.getRound()+1);
        }else{
            System.out.println("Ingresa la columna(1-3)");
            column = in.nextByte();
            if (column < 1 || column > 3){
                Board.reiniciarJuego();
                Board.setRound(Board.getRound()+1);
            }
            player.playRound(board, row, column);
        }
        if (board.verifyWinner()) {
            System.out.println("ganaste");
            return false;
        } else if (Board.freeBoxes == 0) {
            System.out.println("Empate");
            return false;
        }
        return true;
    }

    public static void main(String[] args) {

        Scanner in = new Scanner(System.in);

        Board board = new Board();

        Player player1 = new Player("Jugador 1", 'X');
        Player machine = new Player("Maquina",'O');
        Player player2 = new Player("Jugador 2",'O');

        byte row = 0, column= 0;
        boolean playing= true;

        System.out.println("=========MENU TIC-TAC-TOE=========");
        while (playing){
            System.out.println(board.getMenu());

            Board.setRound((byte)(Math.random()*2+1));

            byte option = in.nextByte();
            switch (option) {
                case 1 -> {
                    System.out.println("Escoja a su oponente\n1) Maquina\n2) Otro jugador");
                    option = in.nextByte();
                    if (option == 1) {
                        player2 = machine;
                    }
                }
                case 2 -> {
                    System.out.println("¿A quien deseas cambiarle su simbolo?\n1) Jugador 1\n2) " + player2.getName() + "\n3) Mostrar simbolos actuales");
                    option = in.nextByte();
                    if (option != 3) {
                        System.out.println("Ingrese el nuevo simbolo");
                    }
                    switch (option) {
                        case 1:
                            player1.setSymbol(in.next().charAt(0));
                        case 2:
                            player2.setSymbol(in.next().charAt(0));
                        case 3:
                            System.out.println(player1.getSymbol());
                            System.out.println(player2.getSymbol());
                    }
                }
                case 3 -> {
                    System.out.println("¿Quien deseas que comience?\n1) Jugador 1\n2) " + player2.getName());
                    option = in.nextByte();
                    switch (option) {
                        case 1:
                            Board.setRound((byte) 1);
                        case 2:
                            Board.setRound((byte) 2);
                    }
                }
                case 4 -> {
                    System.out.println("Iniciando juego");
                    System.out.println("(Para reiniciar el juego, ingresa un numero mayor a 3)");

                    while (playing) {
                        Board.printBoard();

                        if (Board.round % 2 == 0) {
                            System.out.println("Turno de jugador 1");
                            System.out.println("Ingresa la fila(1-3)");
                            row = in.nextByte();
                            if (row < 1 || row > 3){
                                Board.reiniciarJuego();
                                Board.setRound(Board.getRound()+1);
                            }else{
                                System.out.println("Ingresa la columna(1-3)");
                                column = in.nextByte();
                                if (column < 1 || column > 3){
                                    Board.reiniciarJuego();
                                    Board.setRound(Board.getRound()+1);
                                }
                                player1.playRound(board, row, column);
                            }
                            if (board.verifyWinner()) {
                                playing = false;
                                System.out.println("ganaste");
                            } else if (Board.freeBoxes == 0) {
                                playing = false;
                                System.out.println("Empate");
                            }

                        } else {
                            System.out.println("Turno de "+player2.getName());
                            System.out.println("Ingresa la fila(1-3)");
                            row = in.nextByte();
                            if (row < 1 || row > 3){
                                Board.reiniciarJuego();
                                Board.setRound(Board.getRound()+1);
                            }else{
                                System.out.println("Ingresa la columna(1-3)");
                                column = in.nextByte();
                                if (column < 1 || column > 3){
                                    Board.reiniciarJuego();
                                    Board.setRound(Board.getRound()+1);
                                }
                                player2.playRound(board, row, column);
                            }
                            if (board.verifyWinner()) {
                                playing = false;
                                System.out.println("ganaste");
                            } else if (Board.freeBoxes == 0) {
                                playing = false;
                                System.out.println("Empate");
                            }
                        }
                    }
                }
            }
        }
    }
    private boolean comienzaVocal(String nombre){
        return "aeiouAEIOU".indexOf(nombre.charAt(0))>=0;
    }
}
